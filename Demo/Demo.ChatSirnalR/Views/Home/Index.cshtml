@{
    ViewBag.Title = "Welcome " + User.Identity.GetUserName() + "!";
}

@section styles
{
    <style type="text/css">
        #message {
            min-width: 100%;
        }

        #messages-continer {
            height: 50vh;
            overflow: auto;
        }
    </style>
}

<div class="row row-offcanvas row-offcanvas-right">

    <div class="col-xs-12 col-sm-9">

        <div class="row">
            <div class="col-xs-12 col-lg-12">
                <div class="panel panel-default">
                    <div class="panel-heading">Chat room</div>
                    <div class="panel-body" id="messages-continer">
                        <ul class="list-group" id="messages"></ul>
                    </div>
                    <div class="panel-footer">
                        <div class="form-group">
                            <input type="text" class="form-control" id="message" placeholder="Please enter message">
                        </div>
                        <button type="button" id="send" class="btn btn-primary">Send</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xs-6 col-sm-3 sidebar-offcanvas" id="sidebar">
        <div class="list-group" id="users">
        </div>
    </div>
</div>

@section scripts
{
    <script src="~/Scripts/jquery.signalR-2.2.3.min.js"></script>
    <script src="/signalr/hubs"></script>
    <script>
        var currentUserId = '@User.Identity.GetUserId()';

        function loadHistories(e) {
            var _ = $(e);

            $("#users .list-group-item").removeClass("active");
            _.addClass("active");

            $.ajax({
                url: "@Url.Action("MessageHistories")",
                data: {
                    id: currentUserId,
                    to: _.data("id")
                },
                async: false
            }).done(function (data, textStatus, jqXHR) {

                if (!data.success) {
                    console.error(data.result);

                    return;
                }

                $("#messages").html("");

                $.each(data.result, function (index, message) {

                    var time = '<span class="glyphicon glyphicon-time" aria-hidden="true"></span>' + message.date;

                    if (currentUserId === message.id) {
                        $("#messages").append('<li class="list-group-item active">' + time + '<br>' + message.text + '</li>');
                    } else {
                        $("#messages").append('<li class="list-group-item">' + time + '<br>' + message.text + '</li>');
                    }

                });

            }).fail(function (jqXHR, textStatus, errorThrown) {
                console.error(errorThrown);
            });
        }

        $(function () {
            var demoChatHubProxy = $.connection.demoChatHub;

            demoChatHubProxy.client.updateChat = function (id, date, message) {
                var time = '<span class="glyphicon glyphicon-time" aria-hidden="true"></span>' + date;

                if (currentUserId === id) {
                    $("#messages").append('<li class="list-group-item active">' + time + '<br>' + message + '</li>');
                } else {
                    $("#messages").append('<li class="list-group-item">' + time + '<br>' + message + '</li>');
                }

            };

            demoChatHubProxy.client.updateUsers = function (data) {

                if (!data.success) {
                    console.error(data.result);

                    return;
                }

                $("#users").html("");

                $.each(data.result, function (index, user) {

                    var icon = '';
                    var content = '';

                    if (user.id === currentUserId) {
                        icon = '<span class="glyphicon glyphicon-cloud" aria-hidden="true"></span>';
                        content = '<a href="javascript:void(0);" class="list-group-item" data-id="' + user.id + '" onclick="loadHistories(this);"> Saved messages <span class="pull-right badge">' + icon + '</span></a>';
                    } else {
                        icon = (user.online === 1) ? '<span class="glyphicon glyphicon-ok-circle" aria-hidden="true"></span>' : '<span class="glyphicon glyphicon-ban-circle" aria-hidden="true"></span>';
                        content = '<a href="javascript:void(0);" class="list-group-item" data-id="' + user.id + '" onclick="loadHistories(this);">' + user.name + '<span class="pull-right">' + icon + '</span></a>';
                    }


                    $("#users").append(content);
                });

            };

            $.connection.hub.start()
                .done(function () {

                    demoChatHubProxy.server.connectUser(currentUserId).done(function (data, textStatus, jqXHR) {

                        if (!data.success) {
                            console.error(data.result);
                            return;
                        }

                        var $message = $("#message");
                        var sendMessage = function () {
                            $message.focus();

                            if ($message.val() === "")
                                return;

                            var toUserId = $("#users .list-group-item.active").data("id");

                            if (!toUserId)
                                return;

                            demoChatHubProxy.server.sendMessage(currentUserId, toUserId, $message.val());
                            $message.val("");
                        };

                        $message.keyup(function (data) {
                            if (data.which === 13)
                                sendMessage();
                        });

                        $("#send").click(sendMessage);

                        $message.focus();
                    });

                })
                .fail(function () {
                    console.warn("Could not connect.");
                });
        });
    </script>

}
