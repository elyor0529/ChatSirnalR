@{
    ViewBag.Title = "Welcome " + User.Identity.GetUserName() + "!";
}

@section styles
{
    <style type="text/css">
        #message {
            min-width: 100%;
        }

        #messages-continer {
            min-height: 50vh;
            overflow: auto;
        }
    </style>
}

<div class="row row-offcanvas row-offcanvas-right">

    <div class="col-xs-12 col-sm-9">

        <div class="row">
            <div class="col-xs-12 col-lg-12">
                <div class="panel panel-default">
                    <div class="panel-heading">Chat room</div>
                    <div class="panel-body" id="messages-continer">
                        <ul class="list-group" id="messages"></ul>
                    </div>
                    <div class="panel-footer">
                        <div class="form-group">
                            <input type="text" class="form-control" id="message" placeholder="Please enter message">
                        </div>
                        <button type="button" id="send" class="btn btn-primary">Send</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xs-6 col-sm-3 sidebar-offcanvas" id="sidebar">
        <div class="list-group" id="users">
        </div>
    </div>
</div>

@section scripts
{
    <script src="~/Scripts/jquery.signalR-2.2.3.min.js"></script>
    <script src="/signalr/hubs"></script>
    <script>

        $(function () {
            var currentUserName = '@User.Identity.GetUserName()';
            var demoChatHubProxy = $.connection.demoChatHub;

            demoChatHubProxy.client.updateChat = function (userName, message, isPm) {
                var $newMessage;

                if (currentUserName === userName) {
                    $newMessage = $('<li class="list-group-item active">#'+userName+': ' + message + '</li>');
                } else {
                    $newMessage = $('<li class="list-group-item">#'+userName+': '+ message + '</li>');
                }

                $("#messages").append($newMessage);

                $newMessage[0].scrollIntoView(true);
            };

            demoChatHubProxy.client.updateUsersOnline = function (data) {

                if (!data.success) {
                    console.error(data.result);

                    return;
                }

                var $users = $("#users");

                $users.html("");

                $.each(data.result, function (index, user) {

                    var $user = $('<a href="javascript:void(0);" class="list-group-item">' + user + '</a>');

                    $user.click(function () {
                        var $message = $("#message");

                        $message.val("#" + $(this).text() + " ");
                        $message.focus();
                        $users.find(".list-group-item").removeClass("active");
                        $user.addClass("active");
                    });

                    $users.append($user);
                });
            };

            $.connection.hub.start()
                .done(function () {
                    demoChatHubProxy.server.connectUser(currentUserName).done(function (data, textStatus, jqXHR) {
                        if (!data.success) {
                            console.error(data.result);
                            return;
                        }

                        var $message = $("#message");
                        var sendMessage = function () {
                            $message.focus();

                            if ($message.val() === "")
                                return;

                            demoChatHubProxy.server.sendMessage(currentUserName, $message.val());
                            $message.val("");
                        };

                        $message.keyup(function (data) {
                            if (data.which === 13)
                                sendMessage();
                        });

                        $("#send").click(sendMessage);

                        $message.focus();
                    });
                })
                .fail(function () {
                    console.warn("Could not connect.");
                });
        });
    </script>

}
